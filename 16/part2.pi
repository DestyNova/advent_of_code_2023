main =>
  G = read_file_lines(),
  H = G.len,
  W = G[1].len,
  Max = 0,
  foreach (I in 1..W) % luckily the grids are square...
    Max := max(Max, go([{I,1,south}],G,W,H)),
    Max := max(Max, go([{I,H,north}],G,W,H)),
    Max := max(Max, go([{1,I,east}],G,W,H)),
    Max := max(Max, go([{W,I,west}],G,W,H)),
  end,
  println(Max).

go(Beams,G,W,H) = R =>
  Energised = new_set(),
  Seen = new_set(),
  while (Beams.len > 0)
    [{X,Y,Dir}|Rest] = Beams,
    Beams := Rest,
    if not(Seen.has_key({X,Y,Dir})) then
      Seen.put({X,Y,Dir}),
      Energised.put({X,Y}),
      foreach ({I,J,New_dir} in step_beam(G[Y,X],X,Y,Dir), I >= 1, I <= W, J >= 1, J <=W)
        Beams := [{I,J,New_dir}|Beams]
      end,
    end,
  end,
  R = Energised.size.

step_beam('.',X,Y,Dir) = [inc(X,Y,Dir)].
step_beam('|',X,Y,north) = [inc(X,Y,north)].
step_beam('|',X,Y,south) = [inc(X,Y,south)].
step_beam('|',X,Y,_) = [inc(X,Y,north),inc(X,Y,south)].
step_beam('-',X,Y,east) = [inc(X,Y,east)].
step_beam('-',X,Y,west) = [inc(X,Y,west)].
step_beam('-',X,Y,_) = [inc(X,Y,west),inc(X,Y,east)].
step_beam('/',X,Y,east) = [inc(X,Y,north)].
step_beam('/',X,Y,west) = [inc(X,Y,south)].
step_beam('/',X,Y,north) = [inc(X,Y,east)].
step_beam('/',X,Y,south) = [inc(X,Y,west)].
step_beam('\\',X,Y,east) = [inc(X,Y,south)].
step_beam('\\',X,Y,west) = [inc(X,Y,north)].
step_beam('\\',X,Y,north) = [inc(X,Y,west)].
step_beam('\\',X,Y,south) = [inc(X,Y,east)].

inc(X,Y,north) = {X,Y-1,north}.
inc(X,Y,east) = {X+1,Y,east}.
inc(X,Y,south) = {X,Y+1,south}.
inc(X,Y,west) = {X-1,Y,west}.

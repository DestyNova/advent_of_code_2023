import util.

main =>
  G0 = read_file_lines(),
  Blank_rows = find_blank_lines(G0),
  Blank_cols = find_blank_lines(G0.transpose()),
  G1 = explode_blanks(G0, Blank_rows),
  G = explode_blanks(G1.transpose(), Blank_cols).transpose(),

  Galaxies = [{X,Y} : Y in 1..G.len, X in 1..G[1].len, G[Y,X] == '#'],
  Distances = 0,
  foreach (A in Galaxies, B in Galaxies, A != B)
    Distances := Distances + distance(G, A, B),
  end,
  println(Distances // 2).

distance(G, {X,Y}, {I,J}) = abs(X-I) + abs(Y-J).

find_blank_lines(G) = [cond(R.remove_dups() == ".", true, false) : {R,I} in zip(G, 1..G.len)].

explode_blanks(G, Blanks) = R =>
  G2 = [],
  foreach ({IsBlank,R} in zip(Blanks,G))
    G2 := [R|G2],
    if IsBlank then
      G2 := [R|G2],
    end,
  end,
  R = G2.reverse().

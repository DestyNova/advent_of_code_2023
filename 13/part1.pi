import util.

main =>
  Grids = parse_all(read_file_lines()),
  SumH = sum([find_mid(G.transpose.map(reverse)) : G in Grids]),
  SumV = sum([find_mid(G) : G in Grids]),
  println(100*SumV + SumH).

find_mid(G) = R =>
  R = 0,

  foreach (I in 1..G.len-1)
    Upper = G[1..I].reverse(),
    Lower = G[I+1..G.len],
    Len = min(Upper.len, Lower.len),

    if Upper.take(Len) == Lower.take(Len) then
      R := R + I
    end,
  end.
      
parse_all(Xs) = parse_all(Xs, []).
parse_all([],D) = [D.reverse()].
parse_all([""|Xs],D) = [D.reverse()|parse_all(Xs,[])].
parse_all([S|Xs],D) = parse_all(Xs, [S|D]).
